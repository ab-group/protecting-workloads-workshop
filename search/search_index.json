{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Under Construction! - AWS Protecting Your Workloads Workshop Welcome to the AWS Protecting Your Workloads Workshop! In this workshop, you will build an environment consisting of two Amazon Linux web servers behind an application load balancer. The web servers will be running a PHP web site that contains several vulnerabilities. You will then use Amazon Inspector, AWS WAF, and AWS Systems Manager to identify the vulnerabilities and remediate them. Level : Intermediate - Advanced Duration : 2 hours CSF Functions : Protect CAF Components : Preventive Prerequisites : AWS Account, Admin IAM User Workshop Phases To begin the workshop, proceed to the Build phase below. Build Assess Remediate Verify","title":"Home"},{"location":"#under-construction-aws-protecting-your-workloads-workshop","text":"Welcome to the AWS Protecting Your Workloads Workshop! In this workshop, you will build an environment consisting of two Amazon Linux web servers behind an application load balancer. The web servers will be running a PHP web site that contains several vulnerabilities. You will then use Amazon Inspector, AWS WAF, and AWS Systems Manager to identify the vulnerabilities and remediate them. Level : Intermediate - Advanced Duration : 2 hours CSF Functions : Protect CAF Components : Preventive Prerequisites : AWS Account, Admin IAM User","title":"Under Construction! - AWS Protecting Your Workloads Workshop"},{"location":"#workshop-phases","text":"To begin the workshop, proceed to the Build phase below. Build Assess Remediate Verify","title":"Workshop Phases"},{"location":"assess/","text":"Protecting Your Workloads - Assess Phase In the previous Build Phase, you built a CloudFormation stack that contains some Amazon EC2 instances behind an application load balancer. You are now going to use Amazon Inspector to assess the instances and identify findings that need to be remediated. Before you can assess the instances with Amazon Inspector, you need to identify the instances and install the Amazon Inspector agent on them. This is easier to do in small environments but the task can becone much more complex in organizations with hundreds or even thousands of instances. For this reason, you are going to learn how to use tags to select the instances. Tags are labels that can be attached to AWS resources to make it easier to act on them collectively. In this section you will do the following tasks: Examine the stack you built Look up the Amazon EC2 instances that were created as a result of the deployhment and understand the tags that are applied by AWS CloudFormation. Use AWS Systems Manager to install the Amazon Inspector agent on the instances Use Amazon Inspector to scan the instances Examine the stack that you built Go to the CloudFormation console in the same AWS region in which you created the stack in the Build Phase. You should see a list of stacks similar to the figure below. Locate the stack you created. In this documentation, the name of the stack is pww . Copy this stack name into a scratch file on your workstation in case you need it later. Click the check box to the left of the stack name and then click the Resources tab below. You will see a list of resources that were deployed by the stack as shown in the figure below. The Type column lists the type of the resouces. Notice that you will not see any resources of type AWS::EC2::Instance. The reason for this is that the CloudFormation stack did not deploy any. The stack did, however, deploy an auto scaling group with a launch configuration that in turn launched the instances. The auto scaling group was configured to propogate tags (attributes) to the instances it launches. In a production environment, you may have a large number of resources that spin up and spin down because of the elastiicity that AWS offers. You will now learn how to look up the Amazon EC2 instances using tags. Look up the Amazon EC2 instances Go to the Amazon EC2 console and look for instances having a name that begins with the stack name followed by -node , pww-node in this example. If you cannot see them, type the instance name ( pww-node ) into the search box. Copy the two instance ids (they begin with i- and are followed by a series of digits) into your scratch file in case you need them. Select one of them by checking the box to the left of the instance and then click on the Tags tab. You should see a table like that in the figure below. Notice that the instance has tags reflecting the CloudFormation stack name and stack id. These tags are added because of settings in the auto scaling group which propogate tags to newly created instances. You have now learned about the tags that you can use to look up AWS resources. You will take advantage of this feature when you set up Amazon Inspector later in this phase. Install the Inspector Agent on the Amazon EC2 instances Now that you know how to identify the instances in the environment, you need to install the Amazon Inspector agent on them. AWS Systems Manager provides a way for you to run commands across your Amazon EC2 instances. The commands are defined in documents . AWS provides a document that you will use to install the Amazon Inspector agent. You will use tags to identify the instances on which to apply the document. Go to the AWS Systems Manager console. Under the Actions menu on the left, click Run Command . You will be taken to the AWS Systems Manager Run Command home screen. Click the Run a Command button and the Run a Command screen will appear. In the Command document window, page through the available documents until you find the document named AmazonInspector-ManageAWSAgent . Click the radio button to the left of that document as shown in the figure below. Scroll further down until you can see the Targets window. Click the Specifying a tag radio button. For the tag key, enter aws:cloudformation:stack-name . For the value enter the name of the CloudFormation stack you created ( pww in this example) and click Add . Your screen should be similar to the figure below. Scroll down to the Output options window. Clear the box next to Enable writing to an S3 bucket as shown in the figure below. Scroll to the bottom of the screen and click the Run button. You will then be be taken to the command status window while the installation of the Amazon Inspector is running. You can periodically update the command status by clicking on the refresh button within the window. After the commands finish running, the Overall status should be Success as shown in the figure below. You have now installed the Amazon Inspector agent on the instances in the environment. Use Amazon Inspector to Scan the Instances Configure the Amazon Inspector target Go to the Amazon Inspector console and click Get Started if prompted. If you see a \"Welcome to Amazon Inspector\" wizard appear, click Cancel . You will set up Amazon Inspector manually so you can become more familiar with the service. Click Assessment Targets on the left menu and then click the Create button. Scroll down to the Assessment Target window. In the Name field, enter a name for the target. For example, given that the stack name in this example is pww , you can enter pww targets or another name of your choosing. In the Use Tags section, select aws:cloudformation:stack-name for the key from the drop down list and select the name of the stack ( pww in this example) from the drop down value list. Uncheck the Install Agents check box since we have already installed the agent. Your screen should look similar to the figure below. Click the Save button to save the target definition. Inspector may prompt you for permission to create a service linked role to give the Amazon Inspector service permission to retrieve information about your instances. If you see a prompt like the one in the figure below, click Ok to create the role. You have now created an Amazon Inspector target that identifies the instances that would be assessed. The target selects instances based on tag values. In this case, the tag you are using is aws:cloudformation:stack-name which is set to the name of the CloudFormation stack. In particular, the tag is added to the auto scaling launch configuration which is configured to propogate the tag to the Amazon EC2 instances that it launches. Because of this, Amazon Inspector will automatically scan new instances that may appear over the lifetime of the environment. This is an example of how the elasticity of the AWS cloud when combined with tagging can enable you to support dynamic environments. Configure the Amazon Inspector Template Now that you have created an Amazon Inspector target, you will now create an Amazon Inspector tepmlate. You use templates to define the Amazon Inspector targets and rule packages that comprise an assessment run. Run the Amazon Inspector Assessment Click here to proceed to the Remediate Phase.","title":"Assess Phase"},{"location":"assess/#protecting-your-workloads-assess-phase","text":"In the previous Build Phase, you built a CloudFormation stack that contains some Amazon EC2 instances behind an application load balancer. You are now going to use Amazon Inspector to assess the instances and identify findings that need to be remediated. Before you can assess the instances with Amazon Inspector, you need to identify the instances and install the Amazon Inspector agent on them. This is easier to do in small environments but the task can becone much more complex in organizations with hundreds or even thousands of instances. For this reason, you are going to learn how to use tags to select the instances. Tags are labels that can be attached to AWS resources to make it easier to act on them collectively. In this section you will do the following tasks: Examine the stack you built Look up the Amazon EC2 instances that were created as a result of the deployhment and understand the tags that are applied by AWS CloudFormation. Use AWS Systems Manager to install the Amazon Inspector agent on the instances Use Amazon Inspector to scan the instances","title":"Protecting Your Workloads - Assess Phase"},{"location":"assess/#examine-the-stack-that-you-built","text":"Go to the CloudFormation console in the same AWS region in which you created the stack in the Build Phase. You should see a list of stacks similar to the figure below. Locate the stack you created. In this documentation, the name of the stack is pww . Copy this stack name into a scratch file on your workstation in case you need it later. Click the check box to the left of the stack name and then click the Resources tab below. You will see a list of resources that were deployed by the stack as shown in the figure below. The Type column lists the type of the resouces. Notice that you will not see any resources of type AWS::EC2::Instance. The reason for this is that the CloudFormation stack did not deploy any. The stack did, however, deploy an auto scaling group with a launch configuration that in turn launched the instances. The auto scaling group was configured to propogate tags (attributes) to the instances it launches. In a production environment, you may have a large number of resources that spin up and spin down because of the elastiicity that AWS offers. You will now learn how to look up the Amazon EC2 instances using tags.","title":"Examine the stack that you built"},{"location":"assess/#look-up-the-amazon-ec2-instances","text":"Go to the Amazon EC2 console and look for instances having a name that begins with the stack name followed by -node , pww-node in this example. If you cannot see them, type the instance name ( pww-node ) into the search box. Copy the two instance ids (they begin with i- and are followed by a series of digits) into your scratch file in case you need them. Select one of them by checking the box to the left of the instance and then click on the Tags tab. You should see a table like that in the figure below. Notice that the instance has tags reflecting the CloudFormation stack name and stack id. These tags are added because of settings in the auto scaling group which propogate tags to newly created instances. You have now learned about the tags that you can use to look up AWS resources. You will take advantage of this feature when you set up Amazon Inspector later in this phase.","title":"Look up the Amazon EC2 instances"},{"location":"assess/#install-the-inspector-agent-on-the-amazon-ec2-instances","text":"Now that you know how to identify the instances in the environment, you need to install the Amazon Inspector agent on them. AWS Systems Manager provides a way for you to run commands across your Amazon EC2 instances. The commands are defined in documents . AWS provides a document that you will use to install the Amazon Inspector agent. You will use tags to identify the instances on which to apply the document. Go to the AWS Systems Manager console. Under the Actions menu on the left, click Run Command . You will be taken to the AWS Systems Manager Run Command home screen. Click the Run a Command button and the Run a Command screen will appear. In the Command document window, page through the available documents until you find the document named AmazonInspector-ManageAWSAgent . Click the radio button to the left of that document as shown in the figure below. Scroll further down until you can see the Targets window. Click the Specifying a tag radio button. For the tag key, enter aws:cloudformation:stack-name . For the value enter the name of the CloudFormation stack you created ( pww in this example) and click Add . Your screen should be similar to the figure below. Scroll down to the Output options window. Clear the box next to Enable writing to an S3 bucket as shown in the figure below. Scroll to the bottom of the screen and click the Run button. You will then be be taken to the command status window while the installation of the Amazon Inspector is running. You can periodically update the command status by clicking on the refresh button within the window. After the commands finish running, the Overall status should be Success as shown in the figure below. You have now installed the Amazon Inspector agent on the instances in the environment.","title":"Install the Inspector Agent on the Amazon EC2 instances"},{"location":"assess/#use-amazon-inspector-to-scan-the-instances","text":"","title":"Use Amazon Inspector to Scan the Instances"},{"location":"assess/#configure-the-amazon-inspector-target","text":"Go to the Amazon Inspector console and click Get Started if prompted. If you see a \"Welcome to Amazon Inspector\" wizard appear, click Cancel . You will set up Amazon Inspector manually so you can become more familiar with the service. Click Assessment Targets on the left menu and then click the Create button. Scroll down to the Assessment Target window. In the Name field, enter a name for the target. For example, given that the stack name in this example is pww , you can enter pww targets or another name of your choosing. In the Use Tags section, select aws:cloudformation:stack-name for the key from the drop down list and select the name of the stack ( pww in this example) from the drop down value list. Uncheck the Install Agents check box since we have already installed the agent. Your screen should look similar to the figure below. Click the Save button to save the target definition. Inspector may prompt you for permission to create a service linked role to give the Amazon Inspector service permission to retrieve information about your instances. If you see a prompt like the one in the figure below, click Ok to create the role. You have now created an Amazon Inspector target that identifies the instances that would be assessed. The target selects instances based on tag values. In this case, the tag you are using is aws:cloudformation:stack-name which is set to the name of the CloudFormation stack. In particular, the tag is added to the auto scaling launch configuration which is configured to propogate the tag to the Amazon EC2 instances that it launches. Because of this, Amazon Inspector will automatically scan new instances that may appear over the lifetime of the environment. This is an example of how the elasticity of the AWS cloud when combined with tagging can enable you to support dynamic environments.","title":"Configure the Amazon Inspector target"},{"location":"assess/#configure-the-amazon-inspector-template","text":"Now that you have created an Amazon Inspector target, you will now create an Amazon Inspector tepmlate. You use templates to define the Amazon Inspector targets and rule packages that comprise an assessment run.","title":"Configure the Amazon Inspector Template"},{"location":"assess/#run-the-amazon-inspector-assessment","text":"Click here to proceed to the Remediate Phase.","title":"Run the Amazon Inspector Assessment"},{"location":"build/","text":"Protecting Your Workloads - Build Phase Click here to proceed to the Assess Phase.","title":"Build Phase"},{"location":"build/#protecting-your-workloads-build-phase","text":"Click here to proceed to the Assess Phase.","title":"Protecting Your Workloads - Build Phase"},{"location":"contribute/","text":"Contributing Guidelines Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution. Reporting Bugs/Feature Requests We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment Contributing via Pull Requests Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request . Finding contributions to work on Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start. Code of Conduct This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments. Security issue notifications If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue. Licensing See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Contributing"},{"location":"contribute/#contributing-guidelines","text":"Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution.","title":"Contributing Guidelines"},{"location":"contribute/#reporting-bugsfeature-requests","text":"We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment","title":"Reporting Bugs/Feature Requests"},{"location":"contribute/#contributing-via-pull-requests","text":"Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request .","title":"Contributing via Pull Requests"},{"location":"contribute/#finding-contributions-to-work-on","text":"Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.","title":"Finding contributions to work on"},{"location":"contribute/#code-of-conduct","text":"This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments.","title":"Code of Conduct"},{"location":"contribute/#security-issue-notifications","text":"If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue.","title":"Security issue notifications"},{"location":"contribute/#licensing","text":"See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Licensing"},{"location":"getting-started/","text":"Getting Started Create an AWS account In order to complete these workshops, you'll need a valid, usable AWS Account . Use a personal account or create a new AWS account to ensure you have the necessary access and that you do not accidentally modify corporate resources. Do not use an AWS account from the company you work for. Create an admin user If you don't already have an AWS IAM user with admin permissions, please use the following instructions to create one: Browse to the AWS IAM console. Click Users on the left navigation and then click Add User . Enter a User Name , check the checkbox for AWS Management Console access , enter a Custom Password , and click Next:Permissions . Click Attach existing policies directly , click the checkbox next to the AdministratorAccess , and click Next:review . Click Create User Click Dashboard on the left navigation and use the IAM users sign-in link to login as the admin user you just created. Add credits (optional) If you are doing this workshop as part of an AWS sponsored event, you will receive credits to cover the costs. Below are the instructions for entering the credits: Browse to the AWS Account Settings console. Enter the Promo Code you received (these will be handed out at the beginning of the workshop). Enter the Security Check and click Redeem . Create a Cloud9 instance (optional) If the workshop you are doing requires you to run commands or scripts you will need to launch a an AWS Cloud9 instance which will provide you with a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser. The workshop instructions will specify if this needed. Below are the instructions for launching an instance: Browse to the AWS Cloud9 console. Click Create environment on the right side. Enter a Name (security-workshop-ide) and click Next step . Leave all the defaults and click Next step . Click Create environment . The environment will open automatically after it has been provisioned. Browse back to the AWS Cloud9 console and you can click Open IDE on the environment you created to access it at anytime. You are now setup for the workshops!","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#create-an-aws-account","text":"In order to complete these workshops, you'll need a valid, usable AWS Account . Use a personal account or create a new AWS account to ensure you have the necessary access and that you do not accidentally modify corporate resources. Do not use an AWS account from the company you work for.","title":"Create an AWS account"},{"location":"getting-started/#create-an-admin-user","text":"If you don't already have an AWS IAM user with admin permissions, please use the following instructions to create one: Browse to the AWS IAM console. Click Users on the left navigation and then click Add User . Enter a User Name , check the checkbox for AWS Management Console access , enter a Custom Password , and click Next:Permissions . Click Attach existing policies directly , click the checkbox next to the AdministratorAccess , and click Next:review . Click Create User Click Dashboard on the left navigation and use the IAM users sign-in link to login as the admin user you just created.","title":"Create an admin user"},{"location":"getting-started/#add-credits-optional","text":"If you are doing this workshop as part of an AWS sponsored event, you will receive credits to cover the costs. Below are the instructions for entering the credits: Browse to the AWS Account Settings console. Enter the Promo Code you received (these will be handed out at the beginning of the workshop). Enter the Security Check and click Redeem .","title":"Add credits (optional)"},{"location":"getting-started/#create-a-cloud9-instance-optional","text":"If the workshop you are doing requires you to run commands or scripts you will need to launch a an AWS Cloud9 instance which will provide you with a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser. The workshop instructions will specify if this needed. Below are the instructions for launching an instance: Browse to the AWS Cloud9 console. Click Create environment on the right side. Enter a Name (security-workshop-ide) and click Next step . Leave all the defaults and click Next step . Click Create environment . The environment will open automatically after it has been provisioned. Browse back to the AWS Cloud9 console and you can click Open IDE on the environment you created to access it at anytime. You are now setup for the workshops!","title":"Create a Cloud9 instance (optional)"},{"location":"license/","text":"License MIT License Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"remediate/","text":"Protecting Your Workloads - Remediate Phase Click here to proceed to the Verify Phase.","title":"Remediate Phase"},{"location":"remediate/#protecting-your-workloads-remediate-phase","text":"Click here to proceed to the Verify Phase.","title":"Protecting Your Workloads - Remediate Phase"},{"location":"verify/","text":"Protecting Your Workloads - Verify Phase","title":"Verify Phase"},{"location":"verify/#protecting-your-workloads-verify-phase","text":"","title":"Protecting Your Workloads - Verify Phase"}]}